using System.Diagnostics.Contracts;

[ContractClass(typeof (ISomeInterfaceContract))]
internal interface ISomeInterface{caret}
{
  void MethodWithPrecondition(string s);
  string MethodWithPostcondition();
  string PropertyWithPostcondition { get; }
  string MutableProperty { get; set; }
}

[ContractClassFor(typeof (ISomeInterface))]
abstract class ISomeInterfaceContract : ISomeInterface
{
  void ISomeInterface.MethodWithPrecondition(string s)
  {
    throw new System.NotImplementedException();
  }

  string ISomeInterface.MethodWithPostcondition()
  {
    throw new System.NotImplementedException();
  }

  string ISomeInterface.PropertyWithPostcondition
  {
    get { throw new System.NotImplementedException(); }
  }

  string ISomeInterface.MutableProperty
  {
    get { throw new System.NotImplementedException(); }
    set { throw new System.NotImplementedException(); }
  }
}