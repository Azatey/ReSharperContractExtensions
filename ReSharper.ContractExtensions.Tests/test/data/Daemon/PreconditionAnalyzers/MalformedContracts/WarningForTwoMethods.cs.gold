using System.Diagnostics.Contracts;

class A
{
  public void Foo(string s)
  {
    |InstanceMethod();|(0)
    |StaticMethod();|(1)
    |Contract.Requires(s != null)|(2);
    |Contract.Ensures(false)|(3);
  }
  private void |InstanceMethod|(4)() {}
  private void |StaticMethod|(5)() {}
}
---------------------------------------------------------
(0): ReSharper Underlined Error Highlighting: Malformed contract. Detected expression statement evaluated for side-effect in contracts of method 'Foo'
(1): ReSharper Underlined Error Highlighting: Malformed contract. Detected expression statement evaluated for side-effect in contracts of method 'Foo'
(2): ReSharper Dead Code: Method invocation is skipped. Compiler will not generate method invocation because the method is conditional, or it is partial method without implementation
(3): ReSharper Dead Code: Method invocation is skipped. Compiler will not generate method invocation because the method is conditional, or it is partial method without implementation
(4): ReSharper Hint: Method 'InstanceMethod' can be made static
(5): ReSharper Hint: Method 'StaticMethod' can be made static
