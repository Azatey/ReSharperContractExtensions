using System;
using System.Threading.Tasks;
using System.Diagnostics.Contracts;

class A
{
  public async Task FooIfThrow(string s)
  {
    |if (s == null) throw new ArgumentNullException("s");|(0)
  }

  public async Task FooWithLegacyCheck(string s)
  {
    |if (s == null) throw new ArgumentNullException("s");|(1)
    Contract.EndContractBlock();
  }

  public async Task FooWithRequires(string s)
  {
    |Contract.Requires(s != null);|(2)
  }

  protected async Task<int> FooIntWithRequires(string s)
  {
    |Contract.Requires(s != null);|(3)
    return 42;
  }
}
---------------------------------------------------------
(0): ReSharper Warning: Suspicios precondition in public/protected async method
(1): ReSharper Warning: Suspicios precondition in public/protected async method
(2): ReSharper Warning: Suspicios precondition in public/protected async method
(3): ReSharper Warning: Suspicios precondition in public/protected async method
