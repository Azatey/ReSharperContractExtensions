<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <id>ReSharper.ContractExtensions</id>
    <version>0.7.51</version>
    <!-- update plugin ver in AssemblyInfo.cs plz -->
    <title>Code Contract editing extensions</title>
    <authors>Sergey Teplyakov</authors>
    <owners>SergeyTeplyakov</owners>
    <projectUrl>https://github.com/SergeyTeplyakov/ReSharperContractExtensions</projectUrl>
    <iconUrl>https://github.com/SergeyTeplyakov/ReSharperContractExtensions/raw/master/Content/DesignByContract.ico</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>
      Simplifies adding preconditions, postconditions and object invariant during day-to-day activities.
    </description>
    <releaseNotes>
Bug fixes (v.0.7.51)
- Minor fix: enabled generic version for enum check requires.

New features (v.0.7.5)
- Added combo action that convert if-throw precondition check to Contract.Requires (both - gneric and non-generic versions);
- Added combo action that convert between generic and non-generic Contract.Requires

Requires: Requires for enum (https://github.com/SergeyTeplyakov/ReSharperContractExtensions/issues/1)
- Added combo action that adds precondition check for enums and nullable enums with Contract.Requires(Enum.IsDefined(typeof(SomeEnumType), someEnumValue));
- Added combo action that adds postcondition check that enum and nullable enum result is defined by Enum.IsDefiined method.

New features (v.0.7.0)
- Added combo actions that will add Contract.Requires for all method arguments
- Added Plug-in Settings (available at R# Options page):
  * Use generic Contract.Requires&lt;ArgumentNullException&gt; by default
  * Check string arguments with Contract.Requires(!string.IsNullOrEmpty(arg)) by default for string arguments

New features (v.0.6.0)
- Added support for preconditions for property setters
- Addes support for preconditions for property setters for abstract class and interfaces (Combo Requries)
Bug fixes
- Fixed issue with invalid order of Contract.Invariant statements in the object invariant method.
    </releaseNotes>
    <dependencies>
      <dependency id="ReSharper" version="8.0" />
    </dependencies>
    <tags>code contracts design by contract</tags>
  </metadata>
  <files>
    <file src="ContractExtensions\binR82\Release\" target="ReSharper\v8.2\plugins\" />
    <file src="ContractExtensions\binR81\Release\" target="ReSharper\v8.1\plugins\" />
    <file src="ContractExtensions\binR80\Release\" target="ReSharper\v8.0\plugins\" />
  </files>
</package>
