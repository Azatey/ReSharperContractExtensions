<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\JetBrains.ReSharper.SDK.8.2.1158\build\JetBrains.ReSharper.SDK.Props" Condition="Exists('..\packages\JetBrains.ReSharper.SDK.8.2.1158\build\JetBrains.ReSharper.SDK.Props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{015F0C46-EB80-40FA-A508-CAD66B02B7E6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ReSharper.ContractExtensions</RootNamespace>
    <AssemblyName>ReSharper.ContractExtensions</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
    <CodeContractsAssemblyMode>0</CodeContractsAssemblyMode>
    <BaseIntermediateOutputPath>obj\R82\</BaseIntermediateOutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>binR82\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeContractsEnableRuntimeChecking>True</CodeContractsEnableRuntimeChecking>
    <CodeContractsRuntimeOnlyPublicSurface>False</CodeContractsRuntimeOnlyPublicSurface>
    <CodeContractsRuntimeThrowOnFailure>True</CodeContractsRuntimeThrowOnFailure>
    <CodeContractsRuntimeCallSiteRequires>False</CodeContractsRuntimeCallSiteRequires>
    <CodeContractsRuntimeSkipQuantifiers>False</CodeContractsRuntimeSkipQuantifiers>
    <CodeContractsRunCodeAnalysis>False</CodeContractsRunCodeAnalysis>
    <CodeContractsNonNullObligations>True</CodeContractsNonNullObligations>
    <CodeContractsBoundsObligations>True</CodeContractsBoundsObligations>
    <CodeContractsArithmeticObligations>False</CodeContractsArithmeticObligations>
    <CodeContractsEnumObligations>False</CodeContractsEnumObligations>
    <CodeContractsRedundantAssumptions>False</CodeContractsRedundantAssumptions>
    <CodeContractsMissingPublicRequiresAsWarnings>True</CodeContractsMissingPublicRequiresAsWarnings>
    <CodeContractsInferRequires>True</CodeContractsInferRequires>
    <CodeContractsInferEnsures>False</CodeContractsInferEnsures>
    <CodeContractsInferObjectInvariants>False</CodeContractsInferObjectInvariants>
    <CodeContractsSuggestAssumptions>False</CodeContractsSuggestAssumptions>
    <CodeContractsSuggestRequires>True</CodeContractsSuggestRequires>
    <CodeContractsSuggestObjectInvariants>False</CodeContractsSuggestObjectInvariants>
    <CodeContractsRunInBackground>True</CodeContractsRunInBackground>
    <CodeContractsShowSquigglies>True</CodeContractsShowSquigglies>
    <CodeContractsUseBaseLine>False</CodeContractsUseBaseLine>
    <CodeContractsEmitXMLDocs>False</CodeContractsEmitXMLDocs>
    <CodeContractsCustomRewriterAssembly />
    <CodeContractsCustomRewriterClass />
    <CodeContractsLibPaths />
    <CodeContractsExtraRewriteOptions />
    <CodeContractsExtraAnalysisOptions />
    <CodeContractsSQLServerOption />
    <CodeContractsBaseLineFile />
    <CodeContractsCacheAnalysisResults>True</CodeContractsCacheAnalysisResults>
    <CodeContractsFailBuildOnWarnings>False</CodeContractsFailBuildOnWarnings>
    <CodeContractsRuntimeCheckingLevel>Full</CodeContractsRuntimeCheckingLevel>
    <CodeContractsReferenceAssembly>%28none%29</CodeContractsReferenceAssembly>
    <CodeContractsAnalysisWarningLevel>0</CodeContractsAnalysisWarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>binR82\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xaml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ContextActions\ContractsFor\AddContractAvailability.cs" />
    <Compile Include="ContextActions\ContractsFor\AddContractContextAction.cs" />
    <Compile Include="ContextActions\ContractsFor\AddContractExecutor.cs" />
    <Compile Include="ContextActions\Ensures\ComboEnsuresAvailability.cs" />
    <Compile Include="ContextActions\Ensures\ComboEnsuresContextAction.cs" />
    <Compile Include="ContextActions\Ensures\ComboEnsuresExecutor.cs" />
    <Compile Include="ContextActions\Ensures\EnsuresAvailability.cs" />
    <Compile Include="ContextActions\Ensures\EnsuresExecutor.cs" />
    <Compile Include="ContextActions\Ensures\ReturnTypeEnsuresAvailability.cs" />
    <Compile Include="ContextActions\EnumChecks\EnumCheckEnsuresContextAction.cs" />
    <Compile Include="ContextActions\EnumChecks\EnumCheckRequiresAvailability.cs" />
    <Compile Include="ContextActions\EnumChecks\EnumCheckRequiresContextAction.cs" />
    <Compile Include="ContextActions\EnumChecks\EnumCheckRequiresExecutor.cs" />
    <Compile Include="ContextActions\Infrastructure\ContextActionExecutorBase.cs" />
    <Compile Include="ContextActions\Infrastructure\ContractsContextActionBase.cs" />
    <Compile Include="ContextActions\Invariants\FieldOrPropertyDeclaration.cs" />
    <Compile Include="ContextActions\Invariants\InvariantActionExecutor.cs" />
    <Compile Include="ContextActions\Invariants\InvariantAvailability.cs" />
    <Compile Include="ContextActions\Invariants\InvariantContextAction.cs" />
    <Compile Include="ContextActions\Ensures\EnsuresContextAction.cs" />
    <Compile Include="ContextActions\Requires\ComboRequiresAvailability.cs" />
    <Compile Include="ContextActions\Requires\ComboRequiresContextAction.cs" />
    <Compile Include="ContextActions\Infrastructure\ContextActionAvailabilityBase.cs" />
    <Compile Include="ContextActions\Requires\FunctionRequiresAvailability.cs" />
    <Compile Include="ContextActions\Requires\ComboMethodRequiresContextAction.cs" />
    <Compile Include="ContextActions\Requires\ComboMethodRequiresAvailability.cs" />
    <Compile Include="ContextActions\Requires\ParameterRequiresAvailability.cs" />
    <Compile Include="ContextActions\Requires\PreconditionConverters\PreconditionConverterAvailability.cs" />
    <Compile Include="ContextActions\Requires\PreconditionConverters\PreconditionConverterContextAction.cs" />
    <Compile Include="ContextActions\Requires\PreconditionConverters\PreconditionConverterExecutor.cs" />
    <Compile Include="ContextActions\Requires\PropertySetterRequiresAvailability.cs" />
    <Compile Include="ContextActions\Requires\RequiresContextActionBase.cs" />
    <Compile Include="ContractsEx\Assertions\AssertionType.cs" />
    <Compile Include="ContractsEx\Assertions\ContractAssertion.cs" />
    <Compile Include="ContractsEx\Assertions\Expressions\ContractAssertionExpressionBase.cs" />
    <Compile Include="ContractsEx\Assertions\Expressions\ContractEnsureExpression.cs" />
    <Compile Include="ContractsEx\Assertions\Expressions\ContractRequiresExpression.cs" />
    <Compile Include="ContractsEx\Assertions\Expressions\IfThrowPreconditionExpression.cs" />
    <Compile Include="ContractsEx\Assertions\Preconditions\ContractRequiresPreconditionAssertion.cs" />
    <Compile Include="ContractsEx\Assertions\ContractInvariantAssertion.cs" />
    <Compile Include="ContractsEx\Assertions\ContractEnsuresAssertion.cs" />
    <Compile Include="ContractsEx\Assertions\PredicateChecks\EnumValidationPredicateCheck.cs" />
    <Compile Include="ContractsEx\Assertions\PredicateChecks\EqualityExpressionPredicateCheck.cs" />
    <Compile Include="ContractsEx\Assertions\Preconditions\GuardBasedPreconditionAssertion.cs" />
    <Compile Include="ContractsEx\Assertions\Preconditions\IfThrowPreconditionAssertion.cs" />
    <Compile Include="ContractsEx\Assertions\PredicateChecks\ExpressionPredicateCheck.cs" />
    <Compile Include="ContractsEx\Assertions\PredicateChecks\PredicateArgument.cs" />
    <Compile Include="ContractsEx\Assertions\PredicateChecks\PredicateCheck.cs" />
    <Compile Include="ContractsEx\Assertions\PredicateChecks\MethodCallPredicateCheck.cs" />
    <Compile Include="ContractsEx\Assertions\Preconditions\ContractPreconditionAssertion.cs" />
    <Compile Include="ContractsEx\Assertions\Preconditions\PreconditionType.cs" />
    <Compile Include="ContractsEx\Assertions\PredicateChecks\PredicateCheckFactory.cs" />
    <Compile Include="ContractUtils\InvariantUtils.cs" />
    <Compile Include="ContractsEx\ContractStatementExtensions.cs" />
    <Compile Include="ContractsEx\Impl\InvocationVisitor.cs" />
    <Compile Include="ContractsEx\Assertions\Expressions\ContractAssertionExpression.cs" />
    <Compile Include="ContextActions\Requires\ArgumentRequiresAvailability.cs" />
    <Compile Include="ContextActions\Requires\ArgumentRequiresContextAction.cs" />
    <Compile Include="ContextActions\Requires\ArgumentRequiresExecutor.cs" />
    <Compile Include="ContractUtils\ContractExtensions.cs" />
    <Compile Include="ProblemAnalyzers\PreconditionAnalyzers\RedundantRequiresChecker.cs" />
    <Compile Include="ProblemAnalyzers\PreconditionAnalyzers\RedundantRequiresQuickFix.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Settings\ContractExtensionsOptionsPage.xaml.cs" />
    <Compile Include="Settings\ContractExtensionsOptionsViewModel.cs" />
    <Compile Include="Settings\ContractExtensionsSettings.cs" />
    <Compile Include="Utilities\AttributeExtensions.cs" />
    <Compile Include="Utilities\ClassLikeDeclarationExtensions.cs" />
    <Compile Include="Utilities\CSharpContextActionDataProviderExtensions.cs" />
    <Compile Include="Utilities\ExpressionEx.cs" />
    <Compile Include="Utilities\MethodDeclarationEx.cs" />
    <Compile Include="Utilities\Monadic.cs" />
    <Compile Include="Utilities\ParameterEx.cs" />
    <Compile Include="Utilities\StringExtensions.cs" />
    <Compile Include="Utilities\TreeNodeExtensions.cs" />
    <Compile Include="Utilities\JetTypeEx.cs" />
    <Compile Include="Utilities\TypeExtensions.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <Page Include="Settings\ContractExtensionsOptionsPage.xaml">
      <Generator>MSBuild:Compile</Generator>
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="..\packages\JetBrains.ReSharper.SDK.8.2.1158\build\JetBrains.ReSharper.SDK.Targets" Condition="Exists('..\packages\JetBrains.ReSharper.SDK.8.2.1158\build\JetBrains.ReSharper.SDK.Targets')" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>